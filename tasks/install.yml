---
- name: Create the node_exporter group
  ansible.builtin.group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true
  when: node_exporter_system_group != "root"

- name: Create the node_exporter user
  ansible.builtin.user:
    name: "{{ node_exporter_system_user }}"
    groups: "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /
  when: node_exporter_system_user != "root"

- name: Download the node_exporter binary to a local folder
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    mode: 0644
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unarchive the node_exporter binary
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: Upload the node_exporter binary
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: 0750
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
  notify: restart node_exporter
  when: not ansible_check_mode
